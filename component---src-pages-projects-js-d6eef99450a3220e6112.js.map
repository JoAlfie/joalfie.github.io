{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/techList.js"],"names":["Project","project","className","to","fields","slug","frontmatter","listImage","fluid","childImageSharp","alt","listImageAlt","title","wrapperClassName","techList","tech","data","metaTitle","allMarkdownRemark","edges","map","node","key","id","query","TechList","ulClassName","item"],"mappings":"0FAAA,6GAQMA,GARN,OAQgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACC,6BAASC,UAAU,WAClB,kBAAC,IAAD,CAAMC,GAAIF,EAAQG,OAAOC,KAAMH,UAAU,iBACvCD,EAAQK,YAAYC,WACpB,kBAAC,IAAD,CACCC,MAAOP,EAAQK,YAAYC,UAAUE,gBAAgBD,MACrDE,IAAKT,EAAQK,YAAYK,aACzBT,UAAU,oBAGVD,EAAQK,YAAYC,WACrB,yBAAKL,UAAU,+CAEhB,wBAAIA,UAAU,sBAAsBD,EAAQK,YAAYM,OACxD,kBAAC,IAAD,CACCC,iBAAiB,oBACjBC,SAAUb,EAAQK,YAAYS,WAOpB,sBAAe,IAAZC,EAAW,EAAXA,KACjB,OACC,kBAAC,IAAD,CAAQC,UAAU,+BAA+BL,MAAM,YACtD,sEACA,yBAAKV,UAAU,eACbc,EAAKE,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACjC,kBAACrB,EAAD,CAASsB,IAAKD,EAAKE,GAAItB,QAASoB,UAO9B,IAAMG,EAAK,Y,iCC7ClB,2BA0BeC,IAtBE,SAAC,GAAoC,IAAlCZ,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,SAC/BY,EAAcb,EAAgB,eAClBA,EACf,cACH,OAAIC,EAEF,wBAAIZ,UAAWwB,GACbZ,EAASM,KAAI,SAAAO,GAAI,OACjB,wBAAIL,IAAKK,EAAMzB,UAAU,qBACvByB,OAKM","file":"component---src-pages-projects-js-d6eef99450a3220e6112.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport Layout from \"../components/layout\"\r\nimport Link from \"../components/link\"\r\nimport TechList from \"../components/techList\"\r\nimport \"../styles/projectlist.less\"\r\n\r\nconst Project = ({ project }) => {\r\n\treturn (\r\n\t\t<article className=\"project\">\r\n\t\t\t<Link to={project.fields.slug} className=\"project__link\">\r\n\t\t\t\t{project.frontmatter.listImage && (\r\n\t\t\t\t\t<Img\r\n\t\t\t\t\t\tfluid={project.frontmatter.listImage.childImageSharp.fluid}\r\n\t\t\t\t\t\talt={project.frontmatter.listImageAlt}\r\n\t\t\t\t\t\tclassName=\"project__image\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{!project.frontmatter.listImage && (\r\n\t\t\t\t\t<div className=\"project__image project__image--placeholder\" />\r\n\t\t\t\t)}\r\n\t\t\t\t<h2 className=\"project__linktitle\">{project.frontmatter.title}</h2>\r\n\t\t\t\t<TechList\r\n\t\t\t\t\twrapperClassName=\"project__linktext\"\r\n\t\t\t\t\ttechList={project.frontmatter.tech}\r\n\t\t\t\t/>\r\n\t\t\t</Link>\r\n\t\t</article>\r\n\t)\r\n}\r\n\r\nexport default ({ data }) => {\r\n\treturn (\r\n\t\t<Layout metaTitle=\"Projects | Jo Alfie Wimborne\" title=\"Projects\">\r\n\t\t\t<p>A selection of projects I've worked on:</p>\r\n\t\t\t<div className=\"projectlist\">\r\n\t\t\t\t{data.allMarkdownRemark.edges.map(({ node }) => (\r\n\t\t\t\t\t<Project key={node.id} project={node} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport const query = graphql`\r\n\tquery {\r\n\t\tallMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n\t\t\ttotalCount\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\tid\r\n\t\t\t\t\tfrontmatter {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tdate(formatString: \"DD MMMM, YYYY\")\r\n\t\t\t\t\t\tlistImage {\r\n\t\t\t\t\t\t\tchildImageSharp {\r\n\t\t\t\t\t\t\t\tfluid(maxWidth: 350) {\r\n\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlistImageAlt\r\n\t\t\t\t\t\ttech\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfields {\r\n\t\t\t\t\t\tslug\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"../styles/techList.less\"\r\n\r\nconst TechList = ({ wrapperClassName, techList }) => {\r\n\tconst ulClassName = wrapperClassName\r\n\t\t? `projecttech ${wrapperClassName}`\r\n\t\t: \"projecttech\"\r\n\tif (techList)\r\n\t\treturn (\r\n\t\t\t<ul className={ulClassName}>\r\n\t\t\t\t{techList.map(item => (\r\n\t\t\t\t\t<li key={item} className=\"projecttech__item\">\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t)\r\n\telse return null\r\n}\r\n\r\nTechList.propTypes = {\r\n\twrapperClassName: PropTypes.string,\r\n\ttechList: PropTypes.arrayOf(PropTypes.string),\r\n}\r\n\r\nexport default TechList\r\n"],"sourceRoot":""}